[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lakepipe"
dynamic = ["version"]
description = "Modern, functional data pipeline library for high-performance batch and streaming transformations"
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
keywords = ["data", "pipeline", "streaming", "batch", "lakehouse", "functional"]
authors = [
    {name = "Lakepipe Team"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    # Core data stack (zero-copy focus)
    "polars>=0.21.0",
    "duckdb>=0.10.0",
    "pyarrow>=16.0.0",
    
    # Streaming & caching
    "aiokafka>=0.11.0",
    "confluent-kafka>=2.5.0",
    "diskcache>=5.6.0",
    "fsspec>=2024.1.0",
    
    # Supporting libraries
    "loguru>=0.7.0",
    "typer>=0.12.0",
    "rich>=13.0.0",
    "python-decouple>=3.8",
    "orjson>=3.10.0",
    "returns>=0.22.0",
    
    # Additional utilities
    "httpx>=0.27.0",
    "boto3>=1.35.0",
    "s3fs>=2024.1.0",
    "pydantic>=2.8.0",
    "psutil>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "mypy>=1.11.0",
    "ruff>=0.6.0",
    "pre-commit>=3.8.0",
]
docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.26.0",
]
all = [
    "lakepipe[dev,docs]",
]

[project.urls]
"Homepage" = "https://github.com/lakepipe/lakepipe"
"Bug Tracker" = "https://github.com/lakepipe/lakepipe/issues"
"Changelog" = "https://github.com/lakepipe/lakepipe/blob/main/CHANGELOG.md"
"Documentation" = "https://lakepipe.readthedocs.io"

[project.scripts]
lakepipe = "lakepipe.cli.main:app"

[tool.hatch.version]
path = "lakepipe/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/lakepipe",
]

[tool.hatch.build.targets.wheel]
packages = ["lakepipe"]

[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # use 'raise ... from err'
    "B905",  # use explicit 'strict=' parameter with 'zip()'
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=lakepipe",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["lakepipe"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 